[{"/Users/hanweilee/Documents/code-test-sympli/src/reportWebVitals.js":"1","/Users/hanweilee/Documents/code-test-sympli/src/redux/constants.js":"2","/Users/hanweilee/Documents/code-test-sympli/src/redux/reducers/currentPage.js":"3","/Users/hanweilee/Documents/code-test-sympli/src/redux/reducers/index.js":"4","/Users/hanweilee/Documents/code-test-sympli/src/redux/actions/currentPage.js":"5","/Users/hanweilee/Documents/code-test-sympli/src/redux/store.js":"6","/Users/hanweilee/Documents/code-test-sympli/src/App.js":"7","/Users/hanweilee/Documents/code-test-sympli/src/component/Table/index.js":"8","/Users/hanweilee/Documents/code-test-sympli/src/component/Table/Item.js":"9","/Users/hanweilee/Documents/code-test-sympli/src/component/Modal/index.js":"10","/Users/hanweilee/Documents/code-test-sympli/src/component/StatusWrapper/index.js":"11","/Users/hanweilee/Documents/code-test-sympli/src/component/PopupContent.js":"12","/Users/hanweilee/Documents/code-test-sympli/src/redux/reducers/fetchedFilms.js":"13","/Users/hanweilee/Documents/code-test-sympli/src/redux/actions/fetchedFilms.js":"14","/Users/hanweilee/Documents/code-test-sympli/src/component/StatusWrapper/FailedScreen.js":"15"},{"size":362,"mtime":1606514741898,"results":"16","hashOfConfig":"17"},{"size":162,"mtime":1609475311317,"results":"18","hashOfConfig":"17"},{"size":491,"mtime":1609474298658,"results":"19","hashOfConfig":"17"},{"size":194,"mtime":1609551366148,"results":"20","hashOfConfig":"17"},{"size":1095,"mtime":1609481660151,"results":"21","hashOfConfig":"17"},{"size":317,"mtime":1606514741897,"results":"22","hashOfConfig":"17"},{"size":2401,"mtime":1609551521020,"results":"23","hashOfConfig":"17"},{"size":1333,"mtime":1609554064983,"results":"24","hashOfConfig":"17"},{"size":267,"mtime":1609553309380,"results":"25","hashOfConfig":"17"},{"size":738,"mtime":1609554117224,"results":"26","hashOfConfig":"17"},{"size":388,"mtime":1609474297868,"results":"27","hashOfConfig":"17"},{"size":660,"mtime":1609554707939,"results":"28","hashOfConfig":"17"},{"size":281,"mtime":1609475607688,"results":"29","hashOfConfig":"17"},{"size":403,"mtime":1609551365895,"results":"30","hashOfConfig":"17"},{"size":167,"mtime":1609554281802,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1ylvtww",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/hanweilee/Documents/code-test-sympli/src/reportWebVitals.js",[],["66","67"],"/Users/hanweilee/Documents/code-test-sympli/src/redux/constants.js",[],"/Users/hanweilee/Documents/code-test-sympli/src/redux/reducers/currentPage.js",[],"/Users/hanweilee/Documents/code-test-sympli/src/redux/reducers/index.js",[],"/Users/hanweilee/Documents/code-test-sympli/src/redux/actions/currentPage.js",[],["68","69"],"/Users/hanweilee/Documents/code-test-sympli/src/redux/store.js",[],["70","71"],"/Users/hanweilee/Documents/code-test-sympli/src/App.js",["72"],"import { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport {\n  getInitialPage,\n  getPreviousPage,\n  getNextPage,\n} from \"./redux/actions/currentPage\";\n\nimport { getFilmInfo } from \"./redux/actions/fetchedFilms\";\n\nimport Table from \"./component/Table\";\nimport Modal from \"./component/Modal\";\nimport StatusWrapper from \"./component/StatusWrapper\";\nimport PopupContent from \"./component/PopupContent\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  const loadingStatus = useSelector((state) => state.currentPage.status);\n\n  const list = useSelector((state) => state.currentPage.data.results);\n  const enablePrev = useSelector((state) => !!state.currentPage.data.previous);\n  const enableNext = useSelector((state) => !!state.currentPage.data.next);\n  const fetchedFilms = useSelector((state) => state.fetchedFilms);\n\n  const [selectedData, setSelectedData] = useState(null);\n\n  const clickNext = () => {\n    dispatch(getNextPage());\n  };\n\n  const clickPrevious = () => {\n    dispatch(getPreviousPage());\n  };\n\n  const findMatchedFilm = (filmUrl) =>\n    fetchedFilms.find(({ url }) => url === filmUrl);\n\n  const handleOnRowClick = (obj) => {\n    setSelectedData(obj);\n\n    obj.films.forEach((filmUrl) => {\n      //fetch Film info if it's not in fetchedFilms\n      if (!findMatchedFilm(filmUrl)) {\n        dispatch(getFilmInfo(filmUrl));\n      }\n    });\n  };\n\n  const handleOnModalClose = () => {\n    setSelectedData(null)\n  }\n\n  const mapFilmsTitleArray = selectedData?.films.map((filmUrl) => (\n    findMatchedFilm(filmUrl)?.title || \"\"\n  );\n\n  useEffect(() => {\n    dispatch(getInitialPage());\n  }, [dispatch]);\n\n  return (\n    <>\n      <StatusWrapper loadingStatus={loadingStatus}>\n        <>\n          <Table\n            list={list}\n            clickNext={clickNext}\n            clickPrevious={clickPrevious}\n            enablePrev={enablePrev}\n            enableNext={enableNext}\n            onClick={handleOnRowClick}\n          />\n        </>\n      </StatusWrapper>\n      <Modal \n        isOpen={!!selectedData} \n        onClose={handleOnModalClose}\n      >\n        <PopupContent\n          name={selectedData?.name}\n          height={selectedData?.height}\n          birth={selectedData?.birth_year}\n          gender={selectedData?.gender}\n          films={mapFilmsTitleArray}\n        />\n      </Modal>\n    </>\n  );\n};\n\nexport default App;\n","/Users/hanweilee/Documents/code-test-sympli/src/component/Table/index.js",[],"/Users/hanweilee/Documents/code-test-sympli/src/component/Table/Item.js",[],"/Users/hanweilee/Documents/code-test-sympli/src/component/Modal/index.js",[],"/Users/hanweilee/Documents/code-test-sympli/src/component/StatusWrapper/index.js",[],"/Users/hanweilee/Documents/code-test-sympli/src/component/PopupContent.js",[],"/Users/hanweilee/Documents/code-test-sympli/src/redux/reducers/fetchedFilms.js",[],"/Users/hanweilee/Documents/code-test-sympli/src/redux/actions/fetchedFilms.js",[],"/Users/hanweilee/Documents/code-test-sympli/src/component/StatusWrapper/FailedScreen.js",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"73","replacedBy":"77"},{"ruleId":"75","replacedBy":"78"},{"ruleId":"73","replacedBy":"79"},{"ruleId":"75","replacedBy":"80"},{"ruleId":null,"fatal":true,"severity":2,"message":"81","line":57,"column":4},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],["82"],["83"],["82"],["83"],"Parsing error: Unexpected token, expected \",\"\n\n  55 |   const mapFilmsTitleArray = selectedData?.films.map((filmUrl) => (\n  56 |     findMatchedFilm(filmUrl)?.title || \"\"\n> 57 |   );\n     |    ^\n  58 | \n  59 |   useEffect(() => {\n  60 |     dispatch(getInitialPage());","no-global-assign","no-unsafe-negation"]